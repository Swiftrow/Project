//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebForm.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertBike", ReplyAction="http://tempuri.org/IService1/InsertBikeResponse")]
        void InsertBike(WcfService.Model.Bike b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertBike", ReplyAction="http://tempuri.org/IService1/InsertBikeResponse")]
        System.Threading.Tasks.Task InsertBikeAsync(WcfService.Model.Bike b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindBikeById", ReplyAction="http://tempuri.org/IService1/FindBikeByIdResponse")]
        WcfService.Model.Bike FindBikeById(int IDBike);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindBikeById", ReplyAction="http://tempuri.org/IService1/FindBikeByIdResponse")]
        System.Threading.Tasks.Task<WcfService.Model.Bike> FindBikeByIdAsync(int IDBike);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SerializeToXml", ReplyAction="http://tempuri.org/IService1/SerializeToXmlResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WcfService.Model.Bike))]
        void SerializeToXml(object obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SerializeToXml", ReplyAction="http://tempuri.org/IService1/SerializeToXmlResponse")]
        System.Threading.Tasks.Task SerializeToXmlAsync(object obj);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WebForm.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WebForm.ServiceReference1.IService1>, WebForm.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void InsertBike(WcfService.Model.Bike b) {
            base.Channel.InsertBike(b);
        }
        
        public System.Threading.Tasks.Task InsertBikeAsync(WcfService.Model.Bike b) {
            return base.Channel.InsertBikeAsync(b);
        }
        
        public WcfService.Model.Bike FindBikeById(int IDBike) {
            return base.Channel.FindBikeById(IDBike);
        }
        
        public System.Threading.Tasks.Task<WcfService.Model.Bike> FindBikeByIdAsync(int IDBike) {
            return base.Channel.FindBikeByIdAsync(IDBike);
        }
        
        public void SerializeToXml(object obj) {
            base.Channel.SerializeToXml(obj);
        }
        
        public System.Threading.Tasks.Task SerializeToXmlAsync(object obj) {
            return base.Channel.SerializeToXmlAsync(obj);
        }
    }
}
